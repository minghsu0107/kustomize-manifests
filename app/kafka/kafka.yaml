---
apiVersion: v1
kind: Service
metadata:
  name: kafka-hs
  labels:
    app: kafka
  annotations:
    prometheus.io/port: "9308"
    prometheus.io/scrape: "true"
spec:
  ports:
  - port: 9092
    name: server
  - port: 9308
    name: metrics
  clusterIP: None
  selector:
    app: kafka
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: kafka-pdb
spec:
  selector:
    matchLabels:
      app: kafka
  maxUnavailable: 1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app: kafka
  annotations:
    prometheus.io/port: metrics
    prometheus.io/scrape: "true"
spec:
  serviceName: kafka-hs
  replicas: 3
  selector:
    matchLabels:
      app: kafka
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kafka
    spec:
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: kafka-exporter
        image: danielqsj/kafka-exporter:v1.2.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9308
          name: metrics
        command:
        - sh
        - -exc
        - |
          until nc -z -v -w30 $POD_IP 9092; do echo 'Waiting for kafka...'; sleep 2; done && \
          kafka_exporter \
          --kafka.server=$POD_IP:9092 \
          --kafka.version=2.6.1 \
          --web.listen-address=:9308 \
          --log.level=info
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          requests:
            memory: "200Mi"
            cpu: "250m"
          limits:
            memory: "200Mi"
            cpu: "250m"
      - name: kafka
        image: confluentinc/cp-enterprise-kafka:6.0.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9092
          name: kafka
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KAFKA_HEAP_OPTS
          value: "-Xms512M -Xmx512M"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zk-cs:2181
        - name: KAFKA_LOG_DIRS
          value: /var/lib/kafka/data
        - name: KAFKA_METRIC_REPORTERS
          value: "io.confluent.metrics.reporter.ConfluentMetricsReporter"
        - name: CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS
          value: PLAINTEXT://kafka-hs:9092
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "3"
        - name: KAFKA_LOG_RETENTION_HOURS
          value: "72"
        - name: KAFKA_BACKGROUND_THREADS
          value: "15"
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
        - name: KAFKA_AUTO_LEADER_REBALANCE_ENABLE
          value: "true"
        command:
        - sh
        - -exc
        - |
          export KAFKA_BROKER_ID=${HOSTNAME##*-} && \
          export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_NAME}.kafka-hs:9092 && \
          exec /etc/confluent/docker/run
        volumeMounts:
          - name: datadir
            mountPath: /var/lib/kafka/data
        livenessProbe:
          tcpSocket:
            port: 9092
          initialDelaySeconds: 15
          periodSeconds: 30