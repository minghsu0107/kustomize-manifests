apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: traefik
  labels:
    app: traefik
spec:
  replicas: 2
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
      annotations:
        prometheus.io/port: http-metrics
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: traefik-ingress-controller
      containers:
        - name: traefik
          image: traefik:v2.4.3
          args:
            - --log.level=INFO
            - --api # enable api/dashboard
            - --api.dashboard # activate dashboard
            - --api.insecure
            - --entrypoints.web.address=:80
            - --providers.kubernetescrd
            - --metrics.prometheus.entryPoint=metrics
            - --entryPoints.metrics.address=:8082
            - --ping
            - --ping.entryPoint=web
            - --tracing=true
            - --tracing.jaeger=true
            - --tracing.jaeger.collector.endpoint=http://distributor.tracing:14268/api/traces?format=jaeger.thrift
            - --tracing.jaeger.traceContextHeaderName=uber-trace-id
            - --tracing.jaeger.gen128Bit
            - --tracing.jaeger.samplingParam=1.0
            # - --tracing.zipkin=true
            # - --tracing.zipkin.httpEndpoint=http://collector.linkerd-jaeger:9411/api/v2/spans
            # - --tracing.zipkin.httpEndpoint=http://oc-collector.tracing:9411/api/v2/spans
            # - --tracing.zipkin.sameSpan=true
            # - --tracing.zipkin.id128Bit=true
            # - --tracing.zipkin.sampleRate=1
            - --accesslog=true # output log to stdout
          ports:
            - name: web
              containerPort: 80
            - name: admin
              containerPort: 8080
            - name: http-metrics
              containerPort: 8082
          readinessProbe:
            httpGet:
              path: /ping
              port: 80
---
apiVersion: v1
kind: Service
metadata:
  name: traefik
  labels:
    app: traefik
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8082"
spec:
  type: LoadBalancer
  selector:
    app: traefik
  ports:
    - protocol: TCP
      port: 80
      name: web
      targetPort: 80
    - protocol: TCP
      port: 8080
      name: admin
      targetPort: 8080
    - protocol: TCP
      port: 8082
      name: http-metrics
      targetPort: 8082
