apiVersion: v1
kind: Namespace
metadata:
  name: tracing
---
apiVersion: v1
data:
  tempo.yaml: |
    compactor:
        compaction:
            block_retention: 144h
            chunk_size_bytes: 1.048576e+07
        ring:
            kvstore:
                store: memberlist
    distributor: {}
    http_api_prefix: ""
    ingester:
        lifecycler:
            ring:
                replication_factor: 3
    memberlist:
        abort_if_cluster_join_fails: false
        bind_port: 7946
        join_members:
            - gossip-ring.tracing.svc.cluster.local:7946
    overrides:
        per_tenant_override_config: /overrides/overrides.yaml
    search_enabled: false
    server:
        http_listen_port: 3200
    storage:
        trace:
            backend: s3
            s3:
                bucket: tempo
                endpoint: minio-hl-svc.minio:9000
                access_key: XJ2hzpkN
                secret_key: LkYatYm5Ke4BpnQk
                insecure: true
kind: ConfigMap
metadata:
  name: tempo-compactor
  namespace: tracing
---
apiVersion: v1
data:
  tempo.yaml: |
    compactor: {}
    distributor:
        receivers:
            jaeger:
                protocols:
                    grpc:
                        endpoint: 0.0.0.0:14250
            otlp:
                protocols:
                    grpc:
                        endpoint: 0.0.0.0:55680
    http_api_prefix: ""
    ingester:
        lifecycler:
            ring:
                replication_factor: 3
    memberlist:
        abort_if_cluster_join_fails: false
        bind_port: 7946
        join_members:
            - gossip-ring.tracing.svc.cluster.local:7946
    overrides:
        per_tenant_override_config: /overrides/overrides.yaml
    search_enabled: false
    server:
        http_listen_port: 3200
    storage: {}
kind: ConfigMap
metadata:
  name: tempo-distributor
  namespace: tracing
---
apiVersion: v1
data:
  tempo.yaml: |
    compactor: {}
    distributor: {}
    http_api_prefix: ""
    ingester:
        lifecycler:
            ring:
                replication_factor: 3
    memberlist:
        abort_if_cluster_join_fails: false
        bind_port: 7946
        join_members:
            - gossip-ring.tracing.svc.cluster.local:7946
    overrides:
        per_tenant_override_config: /overrides/overrides.yaml
    search_enabled: false
    server:
        http_listen_port: 3200
    storage:
        trace:
            backend: s3
            s3:
                bucket: tempo
                endpoint: minio-hl-svc.minio:9000
                access_key: XJ2hzpkN
                secret_key: LkYatYm5Ke4BpnQk
                insecure: true
kind: ConfigMap
metadata:
  name: tempo-ingester
  namespace: tracing
---
apiVersion: v1
data:
  overrides.yaml: |
    overrides:
        super_user:
            ingestion_burst_size_bytes: 2e+07
            ingestion_rate_limit_bytes: 2e+07
            max_bytes_per_trace: 3e+07
            max_traces_per_user: 100000
kind: ConfigMap
metadata:
  name: tempo-overrides
  namespace: tracing
---
apiVersion: v1
data:
  tempo.yaml: |
    compactor: {}
    distributor: {}
    http_api_prefix: ""
    ingester:
        lifecycler:
            ring:
                replication_factor: 3
    memberlist:
        abort_if_cluster_join_fails: false
        bind_port: 7946
        join_members:
            - gossip-ring.tracing.svc.cluster.local:7946
    overrides:
        per_tenant_override_config: /overrides/overrides.yaml
    querier:
        frontend_worker:
            frontend_address: query-frontend-discovery.tracing.svc.cluster.local:9095
    search_enabled: false
    server:
        http_listen_port: 3200
        log_level: debug
    storage:
        trace:
            backend: s3
            s3:
                bucket: tempo
                endpoint: minio-hl-svc.minio:9000
                access_key: XJ2hzpkN
                secret_key: LkYatYm5Ke4BpnQk
                insecure: true
kind: ConfigMap
metadata:
  name: tempo-querier
  namespace: tracing
---
apiVersion: v1
data:
  tempo-query.yaml: |
    backend: localhost:3200
kind: ConfigMap
metadata:
  name: tempo-query
  namespace: tracing
---
apiVersion: v1
data:
  tempo.yaml: |
    compactor: {}
    distributor: {}
    http_api_prefix: ""
    ingester:
        lifecycler:
            ring:
                replication_factor: 3
    memberlist:
        abort_if_cluster_join_fails: false
        bind_port: 7946
        join_members:
            - gossip-ring.tracing.svc.cluster.local:7946
    overrides:
        per_tenant_override_config: /overrides/overrides.yaml
    search_enabled: false
    server:
        http_listen_port: 3200
    storage:
        trace:
            backend: s3
            s3:
                bucket: tempo
                endpoint: minio-hl-svc.minio:9000
                access_key: XJ2hzpkN
                secret_key: LkYatYm5Ke4BpnQk
                insecure: true
kind: ConfigMap
metadata:
  name: tempo-query-frontend
  namespace: tracing
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "3200"
    prometheus.io/scrape: "true"
  labels:
    name: compactor
  name: compactor
  namespace: tracing
spec:
  ports:
  - name: compactor-prom-metrics
    port: 3200
    targetPort: 3200
  selector:
    app: compactor
    name: compactor
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "3200"
    prometheus.io/scrape: "true"
  labels:
    name: distributor
  name: distributor
  namespace: tracing
spec:
  ports:
  - name: distributor-prom-metrics
    port: 3200
    targetPort: 3200
  selector:
    app: distributor
    name: distributor
    tempo-gossip-member: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: gossip-ring
  namespace: tracing
spec:
  clusterIP: None
  ports:
  - name: gossip-ring
    port: 7946
    protocol: TCP
    targetPort: 7946
  selector:
    tempo-gossip-member: "true"
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "3200"
    prometheus.io/scrape: "true"
  labels:
    name: ingester
  name: ingester
  namespace: tracing
spec:
  ports:
  - name: ingester-prom-metrics
    port: 3200
    protocol: TCP
    targetPort: 3200
  selector:
    app: ingester
    name: ingester
    tempo-gossip-member: "true"
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "3200"
    prometheus.io/scrape: "true"
  labels:
    name: query-frontend
  name: query-frontend
  namespace: tracing
spec:
  ports:
  - name: query-frontend-prom-metrics
    port: 3200
    targetPort: 3200
  - name: tempo-query-jaeger-ui
    port: 16686
    targetPort: 16686
  - name: http
    port: 80
    targetPort: 3200
  selector:
    app: query-frontend
    name: query-frontend
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: query-frontend
  name: query-frontend-discovery
  namespace: tracing
spec:
  clusterIP: None
  ports:
  - name: query-frontend-prom-metrics
    port: 3200
    targetPort: 3200
  - name: tempo-query-jaeger-ui
    port: 16686
    targetPort: 16686
  - name: tempo-query-jaeger-metrics
    port: 16687
    targetPort: 16687
  - name: grpc
    port: 9095
    targetPort: 9095
  publishNotReadyAddresses: true
  selector:
    app: query-frontend
    name: query-frontend
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "16687"
    prometheus.io/scrape: "true"
  labels:
    name: query-frontend
  name: query-frontend-jaeger-prom
  namespace: tracing
spec:
  ports:
  - name: tempo-query-jaeger-metrics
    port: 16687
    targetPort: 16687
  selector:
    app: query-frontend
    name: query-frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: compactor
  namespace: tracing
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: compactor
      name: compactor
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 100%
  template:
    metadata:
      labels:
        app: compactor
        name: compactor
    spec:
      containers:
      - args:
        - -target=compactor
        - -config.file=/conf/tempo.yaml
        - -mem-ballast-size-mbs=1024
        image: grafana/tempo:1.3.1
        imagePullPolicy: IfNotPresent
        name: compactor
        ports:
        - containerPort: 3200
          name: prom-metrics
        readinessProbe:
          httpGet:
            path: /ready
            port: 3200
          initialDelaySeconds: 15
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            memory: 5Gi
          requests:
            cpu: 500m
            memory: 300Mi
        volumeMounts:
        - mountPath: /conf
          name: tempo-conf
        - mountPath: /overrides
          name: overrides
      volumes:
      - configMap:
          name: tempo-compactor
        name: tempo-conf
      - configMap:
          name: tempo-overrides
        name: overrides
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: distributor
  namespace: tracing
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: distributor
      name: distributor
      tempo-gossip-member: "true"
  strategy:
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: distributor
        name: distributor
        tempo-gossip-member: "true"
    spec:
      containers:
      - args:
        - -target=distributor
        - -config.file=/conf/tempo.yaml
        - -mem-ballast-size-mbs=1024
        image: grafana/tempo:1.3.1
        imagePullPolicy: IfNotPresent
        name: distributor
        ports:
        - containerPort: 3200
          name: prom-metrics
        readinessProbe:
          httpGet:
            path: /ready
            port: 3200
          initialDelaySeconds: 15
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "5"
            memory: 5Gi
          requests:
            cpu: 500m
            memory: 300Mi
        volumeMounts:
        - mountPath: /conf
          name: tempo-conf
        - mountPath: /overrides
          name: overrides
      terminationGracePeriodSeconds: 60
      volumes:
      - configMap:
          name: tempo-distributor
        name: tempo-conf
      - configMap:
          name: tempo-overrides
        name: overrides
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: querier
  namespace: tracing
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: querier
      name: querier
      tempo-gossip-member: "true"
  strategy:
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: querier
        name: querier
        tempo-gossip-member: "true"
    spec:
      containers:
      - args:
        - -target=querier
        - -config.file=/conf/tempo.yaml
        - -mem-ballast-size-mbs=1024
        image: grafana/tempo:1.3.1
        imagePullPolicy: IfNotPresent
        name: querier
        ports:
        - containerPort: 3200
          name: prom-metrics
        readinessProbe:
          httpGet:
            path: /ready
            port: 3200
          initialDelaySeconds: 15
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 500Mi
        volumeMounts:
        - mountPath: /conf
          name: tempo-conf
        - mountPath: /overrides
          name: overrides
      volumes:
      - configMap:
          name: tempo-querier
        name: tempo-conf
      - configMap:
          name: tempo-overrides
        name: overrides
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: query-frontend
  namespace: tracing
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: query-frontend
      name: query-frontend
  strategy:
    rollingUpdate:
      maxSurge: 3
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: query-frontend
        name: query-frontend
    spec:
      containers:
      - args:
        - -target=query-frontend
        - -config.file=/conf/tempo.yaml
        - -mem-ballast-size-mbs=1024
        image: grafana/tempo:1.3.1
        imagePullPolicy: IfNotPresent
        name: query-frontend
        ports:
        - containerPort: 3200
          name: prom-metrics
        readinessProbe:
          httpGet:
            path: /ready
            port: 3200
          initialDelaySeconds: 15
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 300Mi
        volumeMounts:
        - mountPath: /conf
          name: tempo-conf
      - args:
        - --query.base-path=/tempo
        - --grpc-storage-plugin.configuration-file=/conf/tempo-query.yaml
        - --query.bearer-token-propagation=true
        image: grafana/tempo-query:1.3.1
        imagePullPolicy: IfNotPresent
        name: tempo-query
        ports:
        - containerPort: 16686
          name: jaeger-ui
        - containerPort: 16687
          name: jaeger-metrics
        volumeMounts:
        - mountPath: /conf
          name: tempo-query-conf
      volumes:
      - configMap:
          name: tempo-query
        name: tempo-query-conf
      - configMap:
          name: tempo-query-frontend
        name: tempo-conf
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vulture
  namespace: tracing
spec:
  minReadySeconds: 10
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: vulture
      name: vulture
  template:
    metadata:
      labels:
        app: vulture
        name: vulture
    spec:
      containers:
      - args:
        - -prometheus-listen-address=:8080
        - -tempo-push-url=http://distributor
        - -tempo-query-url=http://query-frontend:3200/tempo
        - -tempo-org-id=1
        - -tempo-retention-duration=336h
        - -tempo-search-backoff-duration=5s
        - -tempo-read-backoff-duration=10s
        - -tempo-write-backoff-duration=10s
        image: grafana/tempo-vulture:1.3.1
        imagePullPolicy: IfNotPresent
        name: vulture
        ports:
        - containerPort: 8080
          name: prom-metrics
        resources:
          limits:
            cpu: 100m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 100Mi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ingester
  namespace: tracing
spec:
  podManagementPolicy: Parallel
  replicas: 2
  selector:
    matchLabels:
      app: ingester
      name: ingester
      tempo-gossip-member: "true"
  serviceName: ingester
  template:
    metadata:
      labels:
        app: ingester
        name: ingester
        tempo-gossip-member: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                name: ingester
            topologyKey: kubernetes.io/hostname
      containers:
      - args:
        - -target=ingester
        - -config.file=/conf/tempo.yaml
        - -mem-ballast-size-mbs=1024
        image: grafana/tempo:latest
        imagePullPolicy: IfNotPresent
        name: ingester
        ports:
        - containerPort: 3200
          name: prom-metrics
        readinessProbe:
          httpGet:
            path: /ready
            port: 3200
          initialDelaySeconds: 15
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "5"
            memory: 5Gi
          requests:
            cpu: 200m
            memory: 200Mi
        volumeMounts:
        - mountPath: /conf
          name: tempo-conf
        - mountPath: /var/tempo
          name: ingester-data
        - mountPath: /overrides
          name: overrides
      volumes:
      - configMap:
          name: tempo-ingester
        name: tempo-conf
      - configMap:
          name: tempo-overrides
        name: overrides
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: ingester
      name: ingester-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: local-path
