---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-core
  labels:
    app: grafana
    app.kubernetes.io/component: core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
        app.kubernetes.io/component: core
      annotations:
        prometheus.io/port: grafana
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
    spec:
      initContainers:
      - name: fix-permissions
        image: busybox:1.34.1
        # Grafana needs a user that has 472 user ID
        command: ["sh", "-c", "chown -R 472:472 /var/lib/grafana"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: grafana-persistent-storage
          mountPath: /var/lib/grafana
      containers:
      - image: grafana/grafana:7.3.5
        name: grafana-core
        imagePullPolicy: IfNotPresent
        # env:
        resources:
          # keep request = limit to keep this container in guaranteed class
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
          - name: grafana
            containerPort: 3000
        env:
          # The following env variables set up basic auth twith the default admin user and admin password.
          - name: GF_AUTH_BASIC_ENABLED
            value: "true"
          - name: GF_SECURITY_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: grafana
                key: admin-username
          - name: GF_SECURITY_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: grafana
                key: admin-password
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "false"
        readinessProbe:
          httpGet:
            path: /login
            port: 3000
          # initialDelaySeconds: 30
          # timeoutSeconds: 1
        volumeMounts:
        - name: grafana-persistent-storage
          mountPath: /var/lib/grafana
      volumes:
      - name: grafana-persistent-storage
        persistentVolumeClaim:
          claimName: grafana-data
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  labels:
    app: grafana
    app.kubernetes.io/component: core
  annotations:
    prometheus.io/port: '3000'
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/metrics'
spec:
  type: NodePort
  ports:
    - port: 3000
      nodePort: 31565
  selector:
    app: grafana
    app.kubernetes.io/component: core