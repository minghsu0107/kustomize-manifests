---
apiVersion: v1
data:
  prometheus.yaml: |
    global:
      scrape_interval: 10s
      scrape_timeout: 10s
      evaluation_interval: 10s
      external_labels:
        prom_cluster: $(CLUSTER_NAME)
        replica: $(POD_NAME)
    rule_files:
      - "/etc/prometheus-rules/*rules.yaml"
    alerting:
      alertmanagers:
      - scheme: http
        path_prefix: /
        static_configs:
        - targets:
          - "alertmanager:9093"
    scrape_configs:
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: (.+)(?::\d+);(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_name

      - job_name: kubernetes-node-exporter
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - source_labels: [__address__]
            regex: ^(.*):\d+$
            target_label: __address__
            replacement: $1:9100
          - target_label: __scheme__
            replacement: http
          # Host name
          - source_labels: [__meta_kubernetes_node_name]
            target_label: instance
          # Extract some labels
          - source_labels: [__meta_kubernetes_node_label_failure_domain_beta_kubernetes_io_zone]
            target_label: zone
          - source_labels: [__meta_kubernetes_node_label_cloud_google_com_gke_nodepool]
            target_label: gke_nodepool

      - job_name: 'kubernetes-cadvisor'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      
      - job_name: 'kubernetes-services'
        metrics_path: /probe
        params:
          module: [http_2xx]
        kubernetes_sd_configs:
        - role: service
        relabel_configs:
        # monitor only services with prometheus.io/probe: 'true'
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
          action: keep
          regex: 'true'
        - source_labels: [__address__]
          target_label: __param_target
        - target_label: __address__
          replacement: blackbox-exporter.monitoring:9115
        - source_labels: [__param_target]
          target_label: instance
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          target_label: kubernetes_service_name
      
      # federate linkerd metrics
      # - job_name: 'linkerd'
      #   kubernetes_sd_configs:
      #   - role: pod
      #     namespaces:
      #       names: ['linkerd-viz']

      #   relabel_configs:
      #   - source_labels:
      #     - __meta_kubernetes_pod_container_name
      #     action: keep
      #     regex: ^prometheus$

      #   honor_labels: true
      #   metrics_path: '/federate'

      #   params:
      #     'match[]':
      #       - '{job="linkerd-proxy"}'
      #       - '{job="linkerd-controller"}'
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: prometheus-core